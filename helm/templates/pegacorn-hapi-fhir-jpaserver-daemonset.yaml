---
apiVersion: apps/v1 
kind: DaemonSet
metadata:
  annotations:
    fabric8.io/metrics-path: dashboard/file/camel-routes.json/?var-project={{ .Values.serviceName }}&var-version={{ .Values.imageTag }}
  labels:
    app: {{ .Values.serviceName }}
    provider: fabric8
    version: "{{ .Values.imageTag }}"
    group: net.fhirbox.pegacorn
  name: {{ .Values.serviceName }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.serviceName }}
      provider: fabric8
      group: net.fhirbox.pegacorn
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        fabric8.io/metrics-path: dashboard/file/camel-routes.json/?var-project={{ .Values.serviceName }}&var-version={{ .Values.imageTag }}
      labels:
        app: {{ .Values.serviceName }}
        provider: fabric8
        version: "{{ .Values.imageTag }}"
        group: net.fhirbox.pegacorn
        date: "{{ date "20060102-150405" .Release.Time }}"
    spec:
      {{- if (.Values.acrSecretName) }} 
      imagePullSecrets:
        - name: {{ .Values.acrSecretName }}
      {{- end }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ .Values.nodeAffinityLabel }}
                operator: In
                values:
                - "Yes"
      containers:
      - env:
        - name: HAPI_DATASOURCE_URL
          value: "jdbc:postgresql://{{ .Values.dataSourceServiceName }}.{{ .Release.Namespace }}:{{ .Values.dataSourcePortAndDBName }}?ssl=true&sslmode=verify-full&sslcert=/etc/ssl/certs/{{ .Values.dbUser }}.cer&sslkey=/etc/ssl/certs/{{ .Values.dbUser }}.pk8&sslrootcert=/etc/ssl/certs/pegacorn-ca.cer"
        - name: DATASOURCE_SERVICE_NAME
          value: {{ .Values.dataSourceServiceName }}
        - name: HAPI_DATASOURCE_USER
          value: {{ .Values.dbUser }}
        {{- if (.Values.wildflyAdminUser) }} 
        - name: WILDFLY_MANAGEMENT_USER
          value: {{ .Values.wildflyAdminUser }}
        # TODO this should be a secret, or potentially no management user at all
        - name: WILDFLY_MANAGEMENT_PASSWORD
          value: {{ .Values.wildflyAdminPwd }}
        {{- end }}
        - name: WILDFLY_LOG_LEVEL
          value: "{{ .Values.wildflyLogLevel | default "WARN" }}"
        - name: WILDFLY_ENABLE_DEBUG
          value: "{{ .Values.wildflyEnableDebug | default "no" }}"
        - name: KUBERNETES_SERVICE_NAME
          value: {{ .Values.serviceName }}
        - name: MY_HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: MY_POD_SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: JVM_MAX_HEAP_SIZE
          value: "{{ .Values.jvmMaxHeapSizeMB }}m"
        # Set the minimum memory that will be available on the node to assign to the container to be the jvmMaxHeapSizeMB plus 128 MB 
        # for the native heap and operation system processes associated with running Java
        # See https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/#motivation-for-memory-requests-and-limits
        # and https://www.alibabacloud.com/blog/kubernetes-demystified-restrictions-on-java-application-resources_594108
        resources:
          requests:
            memory: "{{ add 128 .Values.jvmMaxHeapSizeMB }}Mi"
        image: {{ .Values.dockerRepo }}pegacorn/pegacorn-hapi-fhir-jpaserver:{{ .Values.imageTag }}            
        imagePullPolicy: {{ .Values.imagePullPolicy | default "IfNotPresent" }}
        livenessProbe:
          httpGet:
            path: /health
            port: 9990
            scheme: HTTP
          initialDelaySeconds: 30
        name: wildfly
        ports:
        - containerPort: 8080
          {{- if (.Values.hostPort) }} 
          hostPort: {{ .Values.hostPort }}
          {{- end }}
          name: http
          protocol: TCP
        {{- if (.Values.wildflyAdminUser) }} 
        - containerPort: 9990
          name: admin
          protocol: TCP
        {{- end }}
        {{- if (.Values.wildflyEnableDebug) and (eq .Values.wildflyEnableDebug "Yes") }} 
        - containerPort: 8787
          name: debug
          protocol: TCP
        {{- end }}
        - containerPort: 9779
          name: prometheus
          protocol: TCP
        - containerPort: 8778
          name: jolokia
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health
            port: 9990
            scheme: HTTP
          initialDelaySeconds: 10
        securityContext:
          privileged: false
        volumeMounts:
        - name: certificates
          mountPath: /var/lib/pegacorn-ssl-certs          
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds | default 30 }}
      volumes:
      - name: certificates
        hostPath:
          path: {{ .Values.hostPathCerts }}
